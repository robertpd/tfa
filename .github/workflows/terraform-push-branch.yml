name: 'Terraform GitHub Actions'
on:
  - push
jobs:
  job1:
    name: 'Generate list of changes'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        TERRAFORM_DIRECTORIES=$(git diff --name-only --no-commit-id -r ${{ github.sha }} '*.tf' | xargs -L 1 dirname | uniq | paste -sd ',' -)
        echo "::warning ::${{TERRAFORM_DIRECTORIES}}"
        echo "::set-output name=matrix::{dir:[${TERRAFORM_DIRECTORIES}]}"
  job2:
    needs: job1
    name: 'Run Terraform CI on changes'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.job1.outputs.matrix) }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
    steps:
    - name: 'Checkout'
      uses: actions/checkout@master
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.11.8
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: ${{ matrix.dir }}
        tf_actions_fmt_write: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.11.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ matrix.dir }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.11.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ matrix.dir }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.11.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ matrix.dir }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
